###############################################################################
#                                                                             #
# Calypsi ISO C compiler for 65816                                version 5.2 #
#                                                       24/Feb/2024  15:53:40 #
# Command line: --core=65816 --code-model=large --data-model=large -D DEBUG   #
#               --target=Foenix -O2 --speed                                   #
#               --list-file=obj/example_basic.lst                             #
#               -I/c/Program Files (x86)/Calypsi-65816/contrib/Foenix-SDK/include #
#               -o obj/example_basic.o src/example_basic.c                    #
#                                                                             #
###############################################################################

    \ 000000                      .rtmodel version,"1"
    \ 000000                      .rtmodel codeModel,"large"
    \ 000000                      .rtmodel dataModel,"large"
    \ 000000                      .rtmodel core,"65816"
    \ 000000                      .rtmodel huge,"0"
    \ 000000                      .rtmodel doubleSize,"32"
    \ 000000                      .rtmodel target,"foenix"
    \ 000000                      .extern _Dp
    \ 000000                      .extern _FillDP4
    \ 000000                      .extern _Mul32
    \ 000000                      .extern _Vfp
    \ 000000                      .extern pmalloc_addblock
    \ 000000                      .extern pmalloc_dump_stats
    \ 000000                      .extern pmalloc_free
    \ 000000                      .extern pmalloc_init
    \ 000000                      .extern pmalloc_malloc
    \ 000000                      .extern printf
0001                  #include <stdio.h>
0002                  #include "pmalloc.h"
0003                  
0004                  int main() {
    \ 000000                      .section farcode,text
    \ 000000                      .public main
    \ 000000          main:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 3b                   tsc
    \ 000009 38                   sec
    \ 00000a e92e00               sbc     ##46
    \ 00000d 1b                   tcs
0005                  	printf("pmalloc: Basic Example\r\r");	
    \ 00000e a9....               lda     ##.word0 `_StringLiteral_[112,109,97,108,108,111,99,58,32,66,97,115,105,99,32,69,120,97,109,112,108,101,13,13]`
    \ 000011 85..                 sta     dp:.tiny _Dp
    \ 000013 a9....               lda     ##.word2 `_StringLiteral_[112,109,97,108,108,111,99,58,32,66,97,115,105,99,32,69,120,97,109,112,108,101,13,13]`
    \ 000016 85..                 sta     dp:.tiny (_Dp+2)
    \ 000018 22......             jsl     long:printf
0006                  	
0007                  	pmalloc_t pmblock;
0008                  	pmalloc_t *pm = &pmblock;
    \ 00001c 3b                   tsc
    \ 00001d 18                   clc
    \ 00001e 690b00               adc     ##11
    \ 000021 a20000               ldx     ##0
    \ 000024 86..                 stx     dp:.tiny (_Dp+10)
    \ 000026 85..                 sta     dp:.tiny (_Dp+8)
0009                  	
0010                  	// Initialise our pmalloc
0011                  	pmalloc_init(pm);
    \ 000028 a5..                 lda     dp:.tiny (_Dp+8)
    \ 00002a 85..                 sta     dp:.tiny _Dp
    \ 00002c a5..                 lda     dp:.tiny (_Dp+10)
    \ 00002e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000030 22......             jsl     long:pmalloc_init
0012                  	#ifdef DEBUG
0013                  	pmalloc_dump_stats(pm);
    \ 000034 22......             jsl     long:`?L35`
0014                  	#endif
0015                  	
0016                  	// Add memory to the heap
0017                  	pmalloc_addblock(pm, (void __far *)0x300000, 0x100000);	
    \ 000038 a90000               lda     ##0
    \ 00003b 85..                 sta     dp:.tiny (_Dp+4)
    \ 00003d a93000               lda     ##48
    \ 000040 85..                 sta     dp:.tiny (_Dp+6)
    \ 000042 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000044 85..                 sta     dp:.tiny _Dp
    \ 000046 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000048 85..                 sta     dp:.tiny (_Dp+2)
    \ 00004a a90000               lda     ##0
    \ 00004d a21000               ldx     ##16
    \ 000050 22......             jsl     long:pmalloc_addblock
0018                  	#ifdef DEBUG
0019                  	pmalloc_dump_stats(pm);
    \ 000054 22......             jsl     long:`?L35`
0020                  	#endif	
0021                  
0022                  	#define TESTCOUNT 4
0023                  
0024                  	uint32_t len = 1024;
    \ 000058 a90004               lda     ##0x400
    \ 00005b 8307                 sta     7,s
    \ 00005d a90000               lda     ##0
    \ 000060 8309                 sta     9,s
0025                  	void* mem[TESTCOUNT];
0026                  
0027                  	// Allocate some memory 
0028                  	for(uint32_t i = 0; i<TESTCOUNT; i++) {
    \ 000062 aa                   tax
    \ 000063 8303                 sta     3,s
    \ 000065 8a                   txa
    \ 000066 8305                 sta     5,s
    \ 000068 a303     `?L5`:      lda     3,s
    \ 00006a c90400               cmp     ##4
    \ 00006d a305                 lda     5,s
    \ 00006f e90000               sbc     ##0
    \ 000072 b003                 bcs     `?L36`
    \ 000074 4c....               jmp     .kbank `?L4`
    \ 000077          `?L36`:
0029                  		printf("Allocating %lu bytes...\r", len*(i+1));
0030                  		mem[i] = pmalloc_malloc(pm, len*(i+1));
0031                  		#ifdef DEBUG
0032                  		pmalloc_dump_stats(pm);
0033                  		#endif
0034                  	}
0035                  
0036                  	// ...use the memory...
0037                  
0038                  	printf("Deallocaing\r");
    \ 000077 a9....               lda     ##.word0 `_StringLiteral_[68,101,97,108,108,111,99,97,105,110,103,13]`
    \ 00007a 85..                 sta     dp:.tiny _Dp
    \ 00007c a9....               lda     ##.word2 `_StringLiteral_[68,101,97,108,108,111,99,97,105,110,103,13]`
    \ 00007f 85..                 sta     dp:.tiny (_Dp+2)
    \ 000081 22......             jsl     long:printf
0039                  	// Deallocate the memory
0040                  	for(uint32_t i = 0; i<TESTCOUNT; i++) {
    \ 000085 a90000               lda     ##0
    \ 000088 85..                 sta     dp:.tiny (_Dp+12)
    \ 00008a 85..                 sta     dp:.tiny (_Dp+14)
    \ 00008c          `?L9`:
    \ 00008c a5..                 lda     dp:.tiny (_Dp+12)
    \ 00008e c90400               cmp     ##4
    \ 000091 a5..                 lda     dp:.tiny (_Dp+14)
    \ 000093 e90000               sbc     ##0
    \ 000096 9026                 bcc     `?L8`
0041                  		pmalloc_free(pm, mem[i]);
0042                  		#ifdef DEBUG
0043                  		pmalloc_dump_stats(pm);
0044                  		#endif
0045                  	}
0046                  	
0047                  	printf("Done\r");
    \ 000098 a9....               lda     ##.word0 `_StringLiteral_[68,111,110,101,13]`
    \ 00009b 85..                 sta     dp:.tiny _Dp
    \ 00009d a9....               lda     ##.word2 `_StringLiteral_[68,111,110,101,13]`
    \ 0000a0 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000a2 22......             jsl     long:printf
0048                  	return 0;
    \ 0000a6 a90000               lda     ##0
0049                  }
    \ 0000a9 a8                   tay
    \ 0000aa 3b                   tsc
    \ 0000ab 18                   clc
    \ 0000ac 692e00               adc     ##46
    \ 0000af 1b                   tcs
    \ 0000b0 98                   tya
    \ 0000b1 7a                   ply
    \ 0000b2 84..                 sty     dp:.tiny (_Dp+14)
    \ 0000b4 7a                   ply
    \ 0000b5 84..                 sty     dp:.tiny (_Dp+12)
    \ 0000b7 7a                   ply
    \ 0000b8 84..                 sty     dp:.tiny (_Dp+10)
    \ 0000ba 7a                   ply
    \ 0000bb 84..                 sty     dp:.tiny (_Dp+8)
    \ 0000bd 6b                   rtl
    \ 0000be          `?L8`:
    \ 0000be a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000c0 0a                   asl     a
    \ 0000c1 0a                   asl     a
    \ 0000c2 85..                 sta     dp:.tiny _Dp
    \ 0000c4 3b                   tsc
    \ 0000c5 18                   clc
    \ 0000c6 691f00               adc     ##31
    \ 0000c9 a20000               ldx     ##0
    \ 0000cc 18                   clc
    \ 0000cd 65..                 adc     dp:.tiny _Dp
    \ 0000cf 86..                 stx     dp:.tiny (_Dp+2)
    \ 0000d1 85..                 sta     dp:.tiny _Dp
    \ 0000d3 a00200               ldy     ##2
    \ 0000d6 b7..                 lda     [.tiny _Dp],y
    \ 0000d8 85..                 sta     dp:.tiny (_Dp+6)
    \ 0000da a7..                 lda     [.tiny _Dp]
    \ 0000dc 85..                 sta     dp:.tiny (_Dp+4)
    \ 0000de a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000e0 85..                 sta     dp:.tiny _Dp
    \ 0000e2 a5..                 lda     dp:.tiny (_Dp+10)
    \ 0000e4 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000e6 22......             jsl     long:pmalloc_free
    \ 0000ea 22......             jsl     long:`?L35`
    \ 0000ee a6..                 ldx     dp:.tiny (_Dp+14)
    \ 0000f0 a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000f2 1a                   inc     a
    \ 0000f3 d001                 bne     `?L22`
    \ 0000f5 e8                   inx
    \ 0000f6          `?L22`:
    \ 0000f6 86..                 stx     dp:.tiny (_Dp+14)
    \ 0000f8 85..                 sta     dp:.tiny (_Dp+12)
    \ 0000fa 8090                 bra     `?L9`
    \ 0000fc a309     `?L4`:      lda     9,s
    \ 0000fe 85..                 sta     dp:.tiny (_Dp+2)
    \ 000100 a307                 lda     7,s
    \ 000102 85..                 sta     dp:.tiny _Dp
    \ 000104 a305                 lda     5,s
    \ 000106 aa                   tax
    \ 000107 a303                 lda     3,s
    \ 000109 1a                   inc     a
    \ 00010a d001                 bne     `?L24`
    \ 00010c e8                   inx
    \ 00010d          `?L24`:
    \ 00010d 86..                 stx     dp:.tiny (_Dp+6)
    \ 00010f 85..                 sta     dp:.tiny (_Dp+4)
    \ 000111 22......             jsl     long:_Mul32
    \ 000115 da                   phx
    \ 000116 48                   pha
    \ 000117 a9....               lda     ##.word0 `_StringLiteral_[65,108,108,111,99,97,116,105,110,103,32,37,108,117,32,98,121,116,101,115,46,46,46,13]`
    \ 00011a 85..                 sta     dp:.tiny _Dp
    \ 00011c a9....               lda     ##.word2 `_StringLiteral_[65,108,108,111,99,97,116,105,110,103,32,37,108,117,32,98,121,116,101,115,46,46,46,13]`
    \ 00011f 85..                 sta     dp:.tiny (_Dp+2)
    \ 000121 22......             jsl     long:printf
    \ 000125 8305                 sta     5,s
    \ 000127 68                   pla
    \ 000128 68                   pla
    \ 000129 d4..                 pei     dp:.tiny (_Dp+10)
    \ 00012b d4..                 pei     dp:.tiny (_Dp+8)
    \ 00012d a30d                 lda     13,s
    \ 00012f 85..                 sta     dp:.tiny (_Dp+2)
    \ 000131 a30b                 lda     11,s
    \ 000133 85..                 sta     dp:.tiny _Dp
    \ 000135 a309                 lda     9,s
    \ 000137 aa                   tax
    \ 000138 a307                 lda     7,s
    \ 00013a 1a                   inc     a
    \ 00013b d001                 bne     `?L28`
    \ 00013d e8                   inx
    \ 00013e          `?L28`:
    \ 00013e 86..                 stx     dp:.tiny (_Dp+6)
    \ 000140 85..                 sta     dp:.tiny (_Dp+4)
    \ 000142 22......             jsl     long:_Mul32
    \ 000146 22......             jsl     long:_FillDP4
    \ 00014a ..                   .byte   .tiny _Dp
    \ 00014b 22......             jsl     long:pmalloc_malloc
    \ 00014f da                   phx
    \ 000150 48                   pha
    \ 000151 a307                 lda     7,s
    \ 000153 0a                   asl     a
    \ 000154 0a                   asl     a
    \ 000155 85..                 sta     dp:.tiny _Dp
    \ 000157 3b                   tsc
    \ 000158 18                   clc
    \ 000159 692300               adc     ##35
    \ 00015c a20000               ldx     ##0
    \ 00015f 18                   clc
    \ 000160 65..                 adc     dp:.tiny _Dp
    \ 000162 86..                 stx     dp:.tiny (_Dp+2)
    \ 000164 85..                 sta     dp:.tiny _Dp
    \ 000166 68                   pla
    \ 000167 fa                   plx
    \ 000168 87..                 sta     [.tiny _Dp]
    \ 00016a 8a                   txa
    \ 00016b a00200               ldy     ##2
    \ 00016e 97..                 sta     [.tiny _Dp],y
    \ 000170 22......             jsl     long:`?L35`
    \ 000174 a305                 lda     5,s
    \ 000176 aa                   tax
    \ 000177 a303                 lda     3,s
    \ 000179 1a                   inc     a
    \ 00017a d001                 bne     `?L33`
    \ 00017c e8                   inx
    \ 00017d 8303     `?L33`:     sta     3,s
    \ 00017f 8a                   txa
    \ 000180 8305                 sta     5,s
    \ 000182 a305                 lda     5,s
    \ 000184 4c....               jmp     .kbank `?L5`
    \ 000000                      .section farcode,text
    \ 000000          `?L35`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 5c......             jmp     long:pmalloc_dump_stats
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[65,108,108,111,99,97,116,105,110,103,32,37,108,117,32,98,121,116,101,115,46,46,46,13]`
    \ 000000          `_StringLiteral_[65,108,108,111,99,97,116,105,110,103,32,37,108,117,32,98,121,116,101,115,46,46,46,13]`:
    \ 000000 416c6c6f             .byte   65,108,108,111,99,97,116,105,110,103,32,37,108,117,32,98,121,116,101,115,46,46,46,13,0
    \ 000004 63617469
    \ 000008 6e672025
    \ 00000c 6c752062
    \ 000010 79746573
    \ 000014 2e2e2e0d
    \ 000018 00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[68,101,97,108,108,111,99,97,105,110,103,13]`
    \ 000000          `_StringLiteral_[68,101,97,108,108,111,99,97,105,110,103,13]`:
    \ 000000 4465616c             .byte   68,101,97,108,108,111,99,97,105,110,103,13,0
    \ 000004 6c6f6361
    \ 000008 696e670d
    \ 00000c 00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[68,111,110,101,13]`
    \ 000000          `_StringLiteral_[68,111,110,101,13]`:
    \ 000000 446f6e65             .byte   68,111,110,101,13,0
    \ 000004 0d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[112,109,97,108,108,111,99,58,32,66,97,115,105,99,32,69,120,97,109,112,108,101,13,13]`
    \ 000000          `_StringLiteral_[112,109,97,108,108,111,99,58,32,66,97,115,105,99,32,69,120,97,109,112,108,101,13,13]`:
    \ 000000 706d616c             .byte   112,109,97,108,108,111,99,58,32,66,97,115,105,99,32,69,120,97,109,112,108,101,13,13,0
    \ 000004 6c6f633a
    \ 000008 20426173
    \ 00000c 69632045
    \ 000010 78616d70
    \ 000014 6c650d0d
    \ 000018 00

##########################
#                        #
# Memory sizes (decimal) #
#                        #
##########################

Executable        (Text): 403 bytes
Constant   __far        :  69 bytes
