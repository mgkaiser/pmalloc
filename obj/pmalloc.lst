###############################################################################
#                                                                             #
# Calypsi ISO C compiler for 65816                                version 5.2 #
#                                                       24/Feb/2024  15:50:27 #
# Command line: --core=65816 --code-model=large --data-model=large -D DEBUG   #
#               --target=Foenix -O2 --speed --list-file=obj/pmalloc.lst       #
#               -I/c/Program Files (x86)/Calypsi-65816/contrib/Foenix-SDK/include #
#               -o obj/pmalloc.o src/pmalloc.c                                #
#                                                                             #
###############################################################################

    \ 000000                      .rtmodel version,"1"
    \ 000000                      .rtmodel codeModel,"large"
    \ 000000                      .rtmodel dataModel,"large"
    \ 000000                      .rtmodel core,"65816"
    \ 000000                      .rtmodel huge,"0"
    \ 000000                      .rtmodel doubleSize,"32"
    \ 000000                      .rtmodel target,"foenix"
    \ 000000                      .extern _Dp
    \ 000000                      .extern _Vfp
    \ 000000                      .extern printf
0001                  //
0002                  // pmalloc - A Heap based memory manager
0003                  //
0004                  // Author: Tom Cully <mail@tomcully.com>
0005                  // Date: 10th Dec 2022
0006                  //
0007                  // pmalloc can be used to manage memory using a familiar malloc/free pattern in embedded 
0008                  // systems, or to manage sub-allocation within an area of memory given by the OS.
0009                  //
0010                  // To get started, call pmalloc_addblock with the address and size of the memory to be used for 
0011                  // allocation.
0012                  //
0013                  
0014                  #include "pmalloc.h"
0015                  
0016                  #ifdef DEBUG
0017                  	#include <stdio.h>
0018                  #endif
0019                  
0020                  void pmalloc_init(pmalloc_t *pm) {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_init
    \ 000000          pmalloc_init:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 a5..                 lda     dp:.tiny _Dp
    \ 000006 22......             jsl     long:`?L164`
0021                  	#ifdef DEBUG
0022                  		printf("pmalloc: DEBUG Enabled\r");
    \ 00000a a9....               lda     ##.word0 `_StringLiteral_[112,109,97,108,108,111,99,58,32,68,69,66,85,71,32,69,110,97,98,108,101,100,13]`
    \ 00000d 85..                 sta     dp:.tiny _Dp
    \ 00000f a9....               lda     ##.word2 `_StringLiteral_[112,109,97,108,108,111,99,58,32,68,69,66,85,71,32,69,110,97,98,108,101,100,13]`
    \ 000012 85..                 sta     dp:.tiny (_Dp+2)
    \ 000014 22......             jsl     long:printf
0023                  	#endif
0024                  
0025                  	pm->available = NULL;
    \ 000018 a90000               lda     ##0
    \ 00001b 87..                 sta     [.tiny (_Dp+8)]
    \ 00001d a00200               ldy     ##2
    \ 000020 97..                 sta     [.tiny (_Dp+8)],y
0026                  	pm->assigned = NULL;
0027                  	pm->freemem = 0;
0028                  	pm->totalmem = 0;
0029                  	pm->totalnodes = 0;
    \ 000022 22......             jsl     long:`?L184`
    \ 000026 a00800               ldy     ##8
    \ 000029 97..                 sta     [.tiny (_Dp+8)],y
    \ 00002b a00a00               ldy     ##10
    \ 00002e 97..                 sta     [.tiny (_Dp+8)],y
    \ 000030 a00c00               ldy     ##12
    \ 000033 97..                 sta     [.tiny (_Dp+8)],y
    \ 000035 a00e00               ldy     ##14
    \ 000038 97..                 sta     [.tiny (_Dp+8)],y
    \ 00003a a01000               ldy     ##16
    \ 00003d 97..                 sta     [.tiny (_Dp+8)],y
    \ 00003f a01200               ldy     ##18
    \ 000042 97..                 sta     [.tiny (_Dp+8)],y
    \ 000044          `?L3`:
0030                  }
    \ 000044 7a                   ply
    \ 000045 84..                 sty     dp:.tiny (_Dp+10)
    \ 000047 7a                   ply
    \ 000048 84..                 sty     dp:.tiny (_Dp+8)
    \ 00004a 6b                   rtl
0031                  
0032                  void pmalloc_addblock(pmalloc_t *pm, void __far *ptr, uint32_t size)
0033                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_addblock
    \ 000000          pmalloc_addblock:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 86..                 stx     dp:.tiny (_Dp+14)
    \ 00000a 85..                 sta     dp:.tiny (_Dp+12)
    \ 00000c a5..                 lda     dp:.tiny _Dp
    \ 00000e 22......             jsl     long:`?L164`
0034                  	// Get the usable size of the block
0035                  	((pmalloc_item_t __far *)ptr)->size = size - sizeof(pmalloc_item_t);
    \ 000012 a6..                 ldx     dp:.tiny (_Dp+14)
    \ 000014 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000016 38                   sec
    \ 000017 e90c00               sbc     ##12
    \ 00001a b001                 bcs     `?L103`
    \ 00001c ca                   dex
    \ 00001d a00800   `?L103`:    ldy     ##8
    \ 000020 97..                 sta     [.tiny (_Dp+4)],y
    \ 000022 8a                   txa
    \ 000023 a00a00               ldy     ##10
    \ 000026 97..                 sta     [.tiny (_Dp+4)],y
0036                  
0037                  	// Update freemem and totalmem
0038                  	pm->freemem += ((pmalloc_item_t __far *)ptr)->size;
    \ 000028 18                   clc
    \ 000029 a00800               ldy     ##8
    \ 00002c b7..                 lda     [.tiny (_Dp+8)],y
    \ 00002e 77..                 adc     [.tiny (_Dp+4)],y
    \ 000030 48                   pha
    \ 000031 a00a00               ldy     ##10
    \ 000034 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000036 77..                 adc     [.tiny (_Dp+4)],y
    \ 000038 aa                   tax
    \ 000039 68                   pla
0039                  	pm->totalmem += pm->freemem;
0040                  
0041                  	// Add it to the available heap, update totalnodes
0042                  	pmalloc_item_insert(&pm->available, ptr);
    \ 00003a 22......             jsl     long:`?L181`
    \ 00003e 18                   clc
    \ 00003f a00c00               ldy     ##12
    \ 000042 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000044 a00800               ldy     ##8
    \ 000047 77..                 adc     [.tiny (_Dp+8)],y
    \ 000049 48                   pha
    \ 00004a a00e00               ldy     ##14
    \ 00004d b7..                 lda     [.tiny (_Dp+8)],y
    \ 00004f a00a00               ldy     ##10
    \ 000052 77..                 adc     [.tiny (_Dp+8)],y
    \ 000054 aa                   tax
    \ 000055 68                   pla
    \ 000056 a00c00               ldy     ##12
    \ 000059 97..                 sta     [.tiny (_Dp+8)],y
    \ 00005b 8a                   txa
    \ 00005c a00e00               ldy     ##14
    \ 00005f 97..                 sta     [.tiny (_Dp+8)],y
    \ 000061 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000063 85..                 sta     dp:.tiny _Dp
    \ 000065 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000067 85..                 sta     dp:.tiny (_Dp+2)
    \ 000069 22......             jsl     long:pmalloc_item_insert
0043                  	pm->totalnodes++;
    \ 00006d a01200               ldy     ##18
    \ 000070 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000072 aa                   tax
    \ 000073 a01000               ldy     ##16
    \ 000076 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000078 1a                   inc     a
    \ 000079 d001                 bne     `?L106`
    \ 00007b e8                   inx
    \ 00007c          `?L106`:
    \ 00007c 97..                 sta     [.tiny (_Dp+8)],y
    \ 00007e 8a                   txa
    \ 00007f a01200               ldy     ##18
    \ 000082 97..                 sta     [.tiny (_Dp+8)],y
    \ 000084          `?L6`:
0044                  }
    \ 000084 7a                   ply
    \ 000085 84..                 sty     dp:.tiny (_Dp+14)
    \ 000087 7a                   ply
    \ 000088 84..                 sty     dp:.tiny (_Dp+12)
    \ 00008a 5c......             jmp     long:`?L3`
0045                  
0046                  void __far *pmalloc_malloc(pmalloc_t *pm, uint32_t size)
0047                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_malloc
    \ 000000          pmalloc_malloc:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 5a                   phy
    \ 000009 5a                   phy
    \ 00000a 5a                   phy
    \ 00000b 5a                   phy
    \ 00000c 8305                 sta     5,s
    \ 00000e 8a                   txa
    \ 00000f 8307                 sta     7,s
    \ 000011 a5..                 lda     dp:.tiny _Dp
    \ 000013 85..                 sta     dp:.tiny (_Dp+12)
    \ 000015 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000017 85..                 sta     dp:.tiny (_Dp+14)
0048                  	// Find a suitable block
0049                  	pmalloc_item_t __far *current = pm->available;
    \ 000019 a00200               ldy     ##2
    \ 00001c b7..                 lda     [.tiny (_Dp+12)],y
    \ 00001e 85..                 sta     dp:.tiny (_Dp+10)
    \ 000020 a7..                 lda     [.tiny (_Dp+12)]
    \ 000022 85..                 sta     dp:.tiny (_Dp+8)
    \ 000024          `?L10`:
0050                  	while(current != NULL && current->size < size) current = current->next;
    \ 000024 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000026 05..                 ora     dp:.tiny (_Dp+10)
    \ 000028 f019                 beq     `?L11`
    \ 00002a a00800               ldy     ##8
    \ 00002d b7..                 lda     [.tiny (_Dp+8)],y
    \ 00002f c305                 cmp     5,s
    \ 000031 a00a00               ldy     ##10
    \ 000034 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000036 e307                 sbc     7,s
    \ 000038 b009                 bcs     `?L11`
    \ 00003a a00600               ldy     ##6
    \ 00003d 22......             jsl     long:`?L162`
    \ 000041 80e1                 bra     `?L10`
    \ 000043          `?L11`:
0051                  
0052                  	// If there's nothing suitable, we're either out of memory or fragged.
0053                  	if(current == NULL) return NULL;
    \ 000043 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000045 05..                 ora     dp:.tiny (_Dp+10)
    \ 000047 d007                 bne     `?L14`
    \ 000049 a90000               lda     ##0
    \ 00004c aa                   tax
    \ 00004d 4c....               jmp     .kbank `?L9`
    \ 000050          `?L14`:
0054                  
0055                  	// Remove it from pm->available
0056                  	pmalloc_item_remove(&pm->available, current);
    \ 000050 22......             jsl     long:`?L161`
    \ 000054 22......             jsl     long:pmalloc_item_remove
0057                  
0058                  	// Add to pm->assigned
0059                  	pmalloc_item_insert(&pm->assigned, current);
    \ 000058 22......             jsl     long:`?L161`
    \ 00005c 18                   clc
    \ 00005d a5..                 lda     dp:.tiny _Dp
    \ 00005f 690400               adc     ##4
    \ 000062 85..                 sta     dp:.tiny _Dp
    \ 000064 22......             jsl     long:pmalloc_item_insert
0060                  
0061                  	// If it's not the exact size..
0062                  	if(current->size != size) {
    \ 000068 a00800               ldy     ##8
    \ 00006b b7..                 lda     [.tiny (_Dp+8)],y
    \ 00006d c305                 cmp     5,s
    \ 00006f d00c                 bne     `?L19`
    \ 000071 a00a00               ldy     ##10
    \ 000074 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000076 c307                 cmp     7,s
    \ 000078 d003                 bne     `?L242`
    \ 00007a 4c....               jmp     .kbank `?L18`
    \ 00007d          `?L242`:
    \ 00007d          `?L19`:
0063                  		// Add a free block that's the remainder size
0064                  		pmalloc_item_t __far *newfree = (pmalloc_item_t __far *)((char __far *)current + sizeof(pmalloc_item_t) + size);
0065                  		newfree->size = current->size - sizeof(pmalloc_item_t) - size;
    \ 00007d 22......             jsl     long:`?L172`
    \ 000081 6305                 adc     5,s
    \ 000083 85..                 sta     dp:.tiny _Dp
    \ 000085 8301                 sta     1,s
    \ 000087 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000089 8303                 sta     3,s
    \ 00008b 22......             jsl     long:`?L165`
    \ 00008f 38                   sec
    \ 000090 e90c00               sbc     ##12
    \ 000093 b001                 bcs     `?L111`
    \ 000095 ca                   dex
    \ 000096          `?L111`:
    \ 000096 86..                 stx     dp:.tiny (_Dp+2)
    \ 000098 85..                 sta     dp:.tiny _Dp
    \ 00009a a6..                 ldx     dp:.tiny (_Dp+2)
    \ 00009c a5..                 lda     dp:.tiny _Dp
    \ 00009e 38                   sec
    \ 00009f e305                 sbc     5,s
    \ 0000a1 48                   pha
    \ 0000a2 8a                   txa
    \ 0000a3 e309                 sbc     9,s
    \ 0000a5 aa                   tax
    \ 0000a6 68                   pla
    \ 0000a7 da                   phx
    \ 0000a8 48                   pha
    \ 0000a9 a307                 lda     7,s
    \ 0000ab 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000ad a305                 lda     5,s
    \ 0000af 85..                 sta     dp:.tiny _Dp
    \ 0000b1 68                   pla
    \ 0000b2 fa                   plx
    \ 0000b3 97..                 sta     [.tiny _Dp],y
    \ 0000b5 8a                   txa
    \ 0000b6 a00a00               ldy     ##10
    \ 0000b9 97..                 sta     [.tiny _Dp],y
0066                  		newfree->next = current->next;
    \ 0000bb a303                 lda     3,s
    \ 0000bd 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000bf a301                 lda     1,s
    \ 0000c1 85..                 sta     dp:.tiny _Dp
    \ 0000c3 a00400               ldy     ##4
    \ 0000c6 b7..                 lda     [.tiny (_Dp+8)],y
    \ 0000c8 97..                 sta     [.tiny _Dp],y
    \ 0000ca a00600               ldy     ##6
    \ 0000cd b7..                 lda     [.tiny (_Dp+8)],y
    \ 0000cf 97..                 sta     [.tiny _Dp],y
0067                  		current->next = NULL;
    \ 0000d1 a90000               lda     ##0
0068                  		
0069                  		// Change pm->assigned size
0070                  		current->size = size;
0071                  		pmalloc_item_insert(&pm->available, newfree);
    \ 0000d4 22......             jsl     long:`?L184`
    \ 0000d8 a305                 lda     5,s
    \ 0000da a00800               ldy     ##8
    \ 0000dd 97..                 sta     [.tiny (_Dp+8)],y
    \ 0000df a307                 lda     7,s
    \ 0000e1 a00a00               ldy     ##10
    \ 0000e4 97..                 sta     [.tiny (_Dp+8)],y
    \ 0000e6 a303                 lda     3,s
    \ 0000e8 85..                 sta     dp:.tiny (_Dp+6)
    \ 0000ea a301                 lda     1,s
    \ 0000ec 85..                 sta     dp:.tiny (_Dp+4)
    \ 0000ee a5..                 lda     dp:.tiny (_Dp+12)
    \ 0000f0 85..                 sta     dp:.tiny _Dp
    \ 0000f2 a5..                 lda     dp:.tiny (_Dp+14)
    \ 0000f4 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000f6 22......             jsl     long:pmalloc_item_insert
0072                  
0073                  		// We've lost a bit of overhead making the new node
0074                  		pm->freemem -= sizeof(pmalloc_item_t);
    \ 0000fa a00a00               ldy     ##10
    \ 0000fd b7..                 lda     [.tiny (_Dp+12)],y
    \ 0000ff aa                   tax
    \ 000100 a00800               ldy     ##8
    \ 000103 b7..                 lda     [.tiny (_Dp+12)],y
    \ 000105 38                   sec
    \ 000106 e90c00               sbc     ##12
    \ 000109 b001                 bcs     `?L114`
    \ 00010b ca                   dex
    \ 00010c          `?L114`:
    \ 00010c 97..                 sta     [.tiny (_Dp+12)],y
    \ 00010e 8a                   txa
    \ 00010f a00a00               ldy     ##10
    \ 000112 97..                 sta     [.tiny (_Dp+12)],y
0075                  		pm->totalnodes++;
    \ 000114 a01200               ldy     ##18
    \ 000117 b7..                 lda     [.tiny (_Dp+12)],y
    \ 000119 aa                   tax
    \ 00011a a01000               ldy     ##16
    \ 00011d b7..                 lda     [.tiny (_Dp+12)],y
    \ 00011f 1a                   inc     a
    \ 000120 d001                 bne     `?L116`
    \ 000122 e8                   inx
    \ 000123          `?L116`:
    \ 000123 97..                 sta     [.tiny (_Dp+12)],y
    \ 000125 8a                   txa
    \ 000126 a01200               ldy     ##18
    \ 000129 97..                 sta     [.tiny (_Dp+12)],y
0076                  
0077                  		// Merge around newfree
0078                  		pmalloc_merge(pm, newfree);
    \ 00012b a303                 lda     3,s
    \ 00012d 85..                 sta     dp:.tiny (_Dp+6)
    \ 00012f a301                 lda     1,s
    \ 000131 85..                 sta     dp:.tiny (_Dp+4)
    \ 000133 a5..                 lda     dp:.tiny (_Dp+12)
    \ 000135 85..                 sta     dp:.tiny _Dp
    \ 000137 a5..                 lda     dp:.tiny (_Dp+14)
    \ 000139 85..                 sta     dp:.tiny (_Dp+2)
    \ 00013b 22......             jsl     long:pmalloc_merge
    \ 00013f          `?L18`:
0079                  	}
0080                  
0081                  	// Reduce the amount of free memory
0082                  	pm->freemem -= current->size;
    \ 00013f 38                   sec
    \ 000140 a00800               ldy     ##8
    \ 000143 b7..                 lda     [.tiny (_Dp+12)],y
    \ 000145 f7..                 sbc     [.tiny (_Dp+8)],y
    \ 000147 48                   pha
    \ 000148 a00a00               ldy     ##10
    \ 00014b b7..                 lda     [.tiny (_Dp+12)],y
    \ 00014d f7..                 sbc     [.tiny (_Dp+8)],y
    \ 00014f aa                   tax
    \ 000150 68                   pla
0083                  
0084                  	// Return the user memory
0085                  	return ((char __far *)current) + sizeof(pmalloc_item_t);
    \ 000151 22......             jsl     long:`?L180`
    \ 000155 a6..                 ldx     dp:.tiny (_Dp+10)
    \ 000157 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000159 18                   clc
    \ 00015a 690c00               adc     ##12
    \ 00015d          `?L9`:
0086                  }
    \ 00015d 5c......             jmp     long:`?L30`
0087                  
0088                  void pmalloc_free(pmalloc_t *pm, void __far *ptr)
0089                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_free
    \ 000000          pmalloc_free:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 5a                   phy
    \ 000009 a5..                 lda     dp:.tiny _Dp
    \ 00000b 85..                 sta     dp:.tiny (_Dp+12)
    \ 00000d a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000f 85..                 sta     dp:.tiny (_Dp+14)
0090                  	// Match stdlib free() NULL interface
0091                  	if(ptr == NULL) return;
    \ 000011 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000013 05..                 ora     dp:.tiny (_Dp+6)
    \ 000015 f072                 beq     `?L23`
0092                  
0093                  	// Get the node of this memory
0094                  	pmalloc_item_t __far *node = (pmalloc_item_t __far *)(((char __far *)ptr) - sizeof(pmalloc_item_t));
    \ 000017 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000019 85..                 sta     dp:.tiny (_Dp+8)
    \ 00001b a5..                 lda     dp:.tiny (_Dp+6)
    \ 00001d 85..                 sta     dp:.tiny (_Dp+10)
    \ 00001f 38                   sec
    \ 000020 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000022 e90c00               sbc     ##12
    \ 000025 85..                 sta     dp:.tiny (_Dp+8)
0095                  	#ifdef DEBUG
0096                  	printf("ptr  = %p\r", ptr);
    \ 000027 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000029 48                   pha
    \ 00002a a5..                 lda     dp:.tiny (_Dp+4)
    \ 00002c 48                   pha
    \ 00002d a9....               lda     ##.word0 `_StringLiteral_[112,116,114,32,32,61,32,37,112,13]`
    \ 000030 85..                 sta     dp:.tiny _Dp
    \ 000032 a9....               lda     ##.word2 `_StringLiteral_[112,116,114,32,32,61,32,37,112,13]`
    \ 000035 22......             jsl     long:`?L174`
    \ 000039 8305                 sta     5,s
0097                  	printf("node = %p\r", node);
    \ 00003b 68                   pla
    \ 00003c 68                   pla
    \ 00003d a5..                 lda     dp:.tiny (_Dp+10)
    \ 00003f 48                   pha
    \ 000040 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000042 48                   pha
    \ 000043 a9....               lda     ##.word0 `_StringLiteral_[110,111,100,101,32,61,32,37,112,13]`
    \ 000046 85..                 sta     dp:.tiny _Dp
    \ 000048 a9....               lda     ##.word2 `_StringLiteral_[110,111,100,101,32,61,32,37,112,13]`
    \ 00004b 22......             jsl     long:`?L174`
    \ 00004f 8305                 sta     5,s
0098                  	#endif
0099                  
0100                  	// Remove it from pm->assigned
0101                  	pmalloc_item_remove(&pm->assigned, node);
    \ 000051 68                   pla
    \ 000052 68                   pla
    \ 000053 22......             jsl     long:`?L161`
    \ 000057 18                   clc
    \ 000058 a5..                 lda     dp:.tiny _Dp
    \ 00005a 690400               adc     ##4
    \ 00005d 85..                 sta     dp:.tiny _Dp
    \ 00005f 22......             jsl     long:pmalloc_item_remove
0102                  
0103                  	pm->freemem += node->size;
    \ 000063 18                   clc
    \ 000064 a00800               ldy     ##8
    \ 000067 b7..                 lda     [.tiny (_Dp+12)],y
    \ 000069 77..                 adc     [.tiny (_Dp+8)],y
    \ 00006b 48                   pha
    \ 00006c a00a00               ldy     ##10
    \ 00006f b7..                 lda     [.tiny (_Dp+12)],y
    \ 000071 77..                 adc     [.tiny (_Dp+8)],y
    \ 000073 aa                   tax
    \ 000074 68                   pla
0104                  
0105                  	// Add to pm->available
0106                  	pmalloc_item_insert(&pm->available, node);
    \ 000075 22......             jsl     long:`?L180`
    \ 000079 22......             jsl     long:`?L161`
    \ 00007d 22......             jsl     long:pmalloc_item_insert
0107                  
0108                  	// Merge around current
0109                  	pmalloc_merge(pm, node);
    \ 000081 22......             jsl     long:`?L161`
    \ 000085 22......             jsl     long:pmalloc_merge
    \ 000089          `?L23`:
0110                  }
    \ 000089 7a                   ply
    \ 00008a 5c......             jmp     long:`?L6`
0111                  
0112                  void pmalloc_merge(pmalloc_t *pm, pmalloc_item_t __far *node) {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_merge
    \ 000000          pmalloc_merge:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 5a                   phy
    \ 000009 5a                   phy
    \ 00000a 5a                   phy
    \ 00000b 5a                   phy
    \ 00000c a5..                 lda     dp:.tiny _Dp
    \ 00000e 8305                 sta     5,s
    \ 000010 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000012 8307                 sta     7,s
    \ 000014 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000016 8301                 sta     1,s
    \ 000018 a5..                 lda     dp:.tiny (_Dp+6)
    \ 00001a 8303                 sta     3,s
0113                  	// Scan backward for contiguous blocks
0114                  	while (node->prev != NULL && (char __far *)node == (char __far *)node->prev + sizeof(pmalloc_item_t) + node->prev->size)
    \ 00001c a303                 lda     3,s
    \ 00001e 85..                 sta     dp:.tiny (_Dp+10)
    \ 000020 a301                 lda     1,s
    \ 000022 85..                 sta     dp:.tiny (_Dp+8)
    \ 000024          `?L31`:
    \ 000024 a7..                 lda     [.tiny (_Dp+8)]
    \ 000026 a00200               ldy     ##2
    \ 000029 17..                 ora     [.tiny (_Dp+8)],y
    \ 00002b f03b                 beq     `?L34`
    \ 00002d b7..                 lda     [.tiny (_Dp+8)],y
    \ 00002f 85..                 sta     dp:.tiny (_Dp+2)
    \ 000031 a7..                 lda     [.tiny (_Dp+8)]
    \ 000033 85..                 sta     dp:.tiny _Dp
    \ 000035 18                   clc
    \ 000036 a5..                 lda     dp:.tiny _Dp
    \ 000038 690c00               adc     ##12
    \ 00003b 85..                 sta     dp:.tiny _Dp
    \ 00003d b7..                 lda     [.tiny (_Dp+8)],y
    \ 00003f 85..                 sta     dp:.tiny (_Dp+6)
    \ 000041 a7..                 lda     [.tiny (_Dp+8)]
    \ 000043 85..                 sta     dp:.tiny (_Dp+4)
    \ 000045 18                   clc
    \ 000046 a5..                 lda     dp:.tiny _Dp
    \ 000048 a00800               ldy     ##8
    \ 00004b 77..                 adc     [.tiny (_Dp+4)],y
    \ 00004d 85..                 sta     dp:.tiny _Dp
    \ 00004f c5..                 cmp     dp:.tiny (_Dp+8)
    \ 000051 d015                 bne     `?L34`
    \ 000053 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000055 c5..                 cmp     dp:.tiny (_Dp+10)
    \ 000057 d00f                 bne     `?L34`
0115                  		node = node->prev;
    \ 000059 a00200               ldy     ##2
    \ 00005c b7..                 lda     [.tiny (_Dp+8)],y
    \ 00005e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000060 a7..                 lda     [.tiny (_Dp+8)]
    \ 000062 22......             jsl     long:`?L163`
    \ 000066 80bc                 bra     `?L31`
    \ 000068          `?L34`:
0116                  
0117                  	// Scan forward and merge free blocks
0118                  	while (node->next == (pmalloc_item_t __far *)((char __far *)node + sizeof(pmalloc_item_t) + node->size)) {
    \ 000068 22......             jsl     long:`?L172`
    \ 00006c a00800               ldy     ##8
    \ 00006f 77..                 adc     [.tiny (_Dp+8)],y
    \ 000071 85..                 sta     dp:.tiny _Dp
    \ 000073 a00400               ldy     ##4
    \ 000076 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000078 c5..                 cmp     dp:.tiny _Dp
    \ 00007a f003                 beq     `?L243`
    \ 00007c 4c....               jmp     .kbank `?L30`
    \ 00007f a00600   `?L243`:    ldy     ##6
    \ 000082 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000084 c5..                 cmp     dp:.tiny (_Dp+2)
    \ 000086 f003                 beq     `?L244`
    \ 000088 4c....               jmp     .kbank `?L30`
    \ 00008b          `?L244`:
0119                  		uint32_t nodesize = node->next->size + sizeof(pmalloc_item_t);
    \ 00008b b7..                 lda     [.tiny (_Dp+8)],y
    \ 00008d 85..                 sta     dp:.tiny (_Dp+2)
    \ 00008f a00400               ldy     ##4
    \ 000092 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000094 85..                 sta     dp:.tiny _Dp
    \ 000096 22......             jsl     long:`?L173`
    \ 00009a 18                   clc
    \ 00009b 690c00               adc     ##12
    \ 00009e 9001                 bcc     `?L126`
    \ 0000a0 e8                   inx
    \ 0000a1          `?L126`:
    \ 0000a1 86..                 stx     dp:.tiny (_Dp+14)
    \ 0000a3 85..                 sta     dp:.tiny (_Dp+12)
0120                  		pm->freemem += sizeof(pmalloc_item_t);
    \ 0000a5 a307                 lda     7,s
    \ 0000a7 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000a9 a305                 lda     5,s
    \ 0000ab 85..                 sta     dp:.tiny _Dp
    \ 0000ad 22......             jsl     long:`?L173`
    \ 0000b1 18                   clc
    \ 0000b2 690c00               adc     ##12
    \ 0000b5 9001                 bcc     `?L128`
    \ 0000b7 e8                   inx
    \ 0000b8 da       `?L128`:    phx
    \ 0000b9 48                   pha
    \ 0000ba a30b                 lda     11,s
    \ 0000bc 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000be a309                 lda     9,s
    \ 0000c0 85..                 sta     dp:.tiny _Dp
    \ 0000c2 68                   pla
    \ 0000c3 fa                   plx
    \ 0000c4 97..                 sta     [.tiny _Dp],y
    \ 0000c6 8a                   txa
    \ 0000c7 a00a00               ldy     ##10
    \ 0000ca 97..                 sta     [.tiny _Dp],y
0121                  		pmalloc_item_remove(&pm->available, node->next);
    \ 0000cc a00600               ldy     ##6
    \ 0000cf b7..                 lda     [.tiny (_Dp+8)],y
    \ 0000d1 85..                 sta     dp:.tiny (_Dp+6)
    \ 0000d3 a00400               ldy     ##4
    \ 0000d6 b7..                 lda     [.tiny (_Dp+8)],y
    \ 0000d8 85..                 sta     dp:.tiny (_Dp+4)
    \ 0000da a307                 lda     7,s
    \ 0000dc 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000de a305                 lda     5,s
    \ 0000e0 85..                 sta     dp:.tiny _Dp
    \ 0000e2 22......             jsl     long:pmalloc_item_remove
0122                  		pm->totalnodes--;
    \ 0000e6 a307                 lda     7,s
    \ 0000e8 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000ea a305                 lda     5,s
    \ 0000ec 85..                 sta     dp:.tiny _Dp
    \ 0000ee 22......             jsl     long:`?L182`
    \ 0000f2 d001                 bne     `?L131`
    \ 0000f4 ca                   dex
    \ 0000f5 3a       `?L131`:    dec     a
    \ 0000f6 da                   phx
    \ 0000f7 48                   pha
    \ 0000f8 a30b                 lda     11,s
    \ 0000fa 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000fc a309                 lda     9,s
    \ 0000fe 85..                 sta     dp:.tiny _Dp
    \ 000100 68                   pla
    \ 000101 fa                   plx
    \ 000102 97..                 sta     [.tiny _Dp],y
    \ 000104 8a                   txa
    \ 000105 a01200               ldy     ##18
    \ 000108 97..                 sta     [.tiny _Dp],y
0123                  		node->size += nodesize;
    \ 00010a 18                   clc
    \ 00010b a00800               ldy     ##8
    \ 00010e b7..                 lda     [.tiny (_Dp+8)],y
    \ 000110 65..                 adc     dp:.tiny (_Dp+12)
    \ 000112 48                   pha
    \ 000113 a00a00               ldy     ##10
    \ 000116 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000118 65..                 adc     dp:.tiny (_Dp+14)
    \ 00011a aa                   tax
    \ 00011b 68                   pla
    \ 00011c 22......             jsl     long:`?L181`
    \ 000120 4c....               jmp     .kbank `?L34`
    \ 000123          `?L30`:
0124                  	}
0125                  }
    \ 000123 7a                   ply
    \ 000124 7a                   ply
    \ 000125 7a                   ply
    \ 000126 7a                   ply
    \ 000127 5c......             jmp     long:`?L6`
0126                  
0127                  uint32_t pmalloc_sizeof(pmalloc_t *pm, void __far *ptr) {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_sizeof
    \ 000000          pmalloc_sizeof:
0128                  	// Get the actual pmalloc_item_t of the block
0129                  	pmalloc_item_t __far *node = (pmalloc_item_t __far *)(ptr - sizeof(pmalloc_item_t));
0130                  
0131                  	// Return its size
0132                  	return node->size;
    \ 000000 a00a00               ldy     ##10
    \ 000003 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000005 aa                   tax
    \ 000006 a00800               ldy     ##8
    \ 000009 b7..                 lda     [.tiny (_Dp+4)],y
0133                  }
    \ 00000b 6b                   rtl
0134                  
0135                  uint32_t pmalloc_totalmem(pmalloc_t *pm) { return pm->totalmem; }
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_totalmem
    \ 000000          pmalloc_totalmem:
    \ 000000 a00e00               ldy     ##14
    \ 000003 b7..                 lda     [.tiny _Dp],y
    \ 000005 aa                   tax
    \ 000006 a00c00               ldy     ##12
    \ 000009 b7..                 lda     [.tiny _Dp],y
    \ 00000b 6b                   rtl
0136                  uint32_t pmalloc_freemem(pmalloc_t *pm) { return pm->freemem; }
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_freemem
    \ 000000          pmalloc_freemem:
    \ 000000 22......             jsl     long:`?L173`
    \ 000004 6b                   rtl
0137                  uint32_t pmalloc_usedmem(pmalloc_t *pm) { return pm->totalmem - pm->freemem; }
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_usedmem
    \ 000000          pmalloc_usedmem:
    \ 000000 38                   sec
    \ 000001 a00c00               ldy     ##12
    \ 000004 b7..                 lda     [.tiny _Dp],y
    \ 000006 a00800               ldy     ##8
    \ 000009 f7..                 sbc     [.tiny _Dp],y
    \ 00000b 48                   pha
    \ 00000c a00e00               ldy     ##14
    \ 00000f b7..                 lda     [.tiny _Dp],y
    \ 000011 a00a00               ldy     ##10
    \ 000014 f7..                 sbc     [.tiny _Dp],y
    \ 000016 aa                   tax
    \ 000017 68                   pla
    \ 000018 6b                   rtl
0138                  uint32_t pmalloc_overheadmem(pmalloc_t *pm) { return pm->totalnodes * sizeof(pmalloc_item_t); }
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_overheadmem
    \ 000000          pmalloc_overheadmem:
    \ 000000 22......             jsl     long:`?L182`
    \ 000004 86..                 stx     dp:.tiny _Dp
    \ 000006 0a                   asl     a
    \ 000007 26..                 rol     dp:.tiny _Dp
    \ 000009 0a                   asl     a
    \ 00000a 26..                 rol     dp:.tiny _Dp
    \ 00000c a6..                 ldx     dp:.tiny _Dp
    \ 00000e 86..                 stx     dp:.tiny (_Dp+2)
    \ 000010 85..                 sta     dp:.tiny _Dp
    \ 000012 86..                 stx     dp:.tiny (_Dp+4)
    \ 000014 0a                   asl     a
    \ 000015 26..                 rol     dp:.tiny (_Dp+4)
    \ 000017 a6..                 ldx     dp:.tiny (_Dp+4)
    \ 000019 18                   clc
    \ 00001a 65..                 adc     dp:.tiny _Dp
    \ 00001c 48                   pha
    \ 00001d 8a                   txa
    \ 00001e 65..                 adc     dp:.tiny (_Dp+2)
    \ 000020 aa                   tax
    \ 000021 68                   pla
    \ 000022 86..                 stx     dp:.tiny (_Dp+2)
    \ 000024 85..                 sta     dp:.tiny _Dp
    \ 000026 a6..                 ldx     dp:.tiny (_Dp+2)
    \ 000028 a5..                 lda     dp:.tiny _Dp
    \ 00002a 6b                   rtl
0139                  
0140                  void pmalloc_item_insert(fp_pmalloc_item_t *root, void __far *ptr)
0141                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_item_insert
    \ 000000          pmalloc_item_insert:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
0142                  	// No existing root
0143                  	if(*root == NULL) {
    \ 000004 a7..                 lda     [.tiny _Dp]
    \ 000006 a00200               ldy     ##2
    \ 000009 17..                 ora     [.tiny _Dp],y
    \ 00000b d024                 bne     `?L61`
0144                  		*root = (pmalloc_item_t __far *)ptr;
    \ 00000d a5..                 lda     dp:.tiny (_Dp+4)
    \ 00000f 87..                 sta     [.tiny _Dp]
    \ 000011 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000013 97..                 sta     [.tiny _Dp],y
0145                  		(*root)->prev = NULL;
    \ 000015 85..                 sta     dp:.tiny (_Dp+6)
    \ 000017 a7..                 lda     [.tiny _Dp]
    \ 000019 85..                 sta     dp:.tiny (_Dp+4)
    \ 00001b a90000               lda     ##0
    \ 00001e 87..                 sta     [.tiny (_Dp+4)]
    \ 000020 97..                 sta     [.tiny (_Dp+4)],y
0146                  		(*root)->next = NULL;
    \ 000022 b7..                 lda     [.tiny _Dp],y
    \ 000024 85..                 sta     dp:.tiny (_Dp+6)
    \ 000026 a7..                 lda     [.tiny _Dp]
    \ 000028 85..                 sta     dp:.tiny (_Dp+4)
    \ 00002a 22......             jsl     long:`?L176`
0147                  		return;
    \ 00002e 4c....               jmp     .kbank `?L59`
    \ 000031          `?L61`:
0148                  	}
0149                  
0150                  	// Where is the block in relation to the root?
0151                  	if(ptr < (void*)*root) {
    \ 000031 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000033 c7..                 cmp     [.tiny _Dp]
    \ 000035 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000037 f7..                 sbc     [.tiny _Dp],y
    \ 000039 b017                 bcs     `?L64`
0152                  		// New block before root
0153                  		pmalloc_item_t __far *node = (pmalloc_item_t __far *)ptr;
0154                  		pmalloc_item_t *oldroot = *root;
0155                  		oldroot->prev = node;
0156                  		node->next = oldroot;
    \ 00003b 22......             jsl     long:`?L177`
    \ 00003f a5..                 lda     dp:.tiny (_Dp+4)
    \ 000041 87..                 sta     [.tiny (_Dp+8)]
    \ 000043 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000045 97..                 sta     [.tiny (_Dp+8)],y
    \ 000047 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000049 a00400               ldy     ##4
    \ 00004c 97..                 sta     [.tiny (_Dp+4)],y
    \ 00004e a5..                 lda     dp:.tiny (_Dp+10)
    \ 000050 805d                 bra     `?L159`
    \ 000052          `?L64`:
0157                  		*root = node;
0158                  	} else {
0159                  		// New block within or at end of list
0160                  		pmalloc_item_t __far *current = *root;
    \ 000052 22......             jsl     long:`?L177`
    \ 000056          `?L67`:
0161                  		pmalloc_item_t __far *node = (pmalloc_item_t __far *)ptr;
0162                  		
0163                  		// Skip until we find the right place to insert, or the end of the list
0164                  		while(current->next != NULL && node > current->next) current = current->next;
    \ 000056 22......             jsl     long:`?L183`
    \ 00005a f016                 beq     `?L68`
    \ 00005c a00400               ldy     ##4
    \ 00005f b7..                 lda     [.tiny (_Dp+8)],y
    \ 000061 c5..                 cmp     dp:.tiny (_Dp+4)
    \ 000063 a00600               ldy     ##6
    \ 000066 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000068 e5..                 sbc     dp:.tiny (_Dp+6)
    \ 00006a b006                 bcs     `?L68`
    \ 00006c 22......             jsl     long:`?L162`
    \ 000070 80e4                 bra     `?L67`
    \ 000072          `?L68`:
0165                  
0166                  		// We're inserting the block at...
0167                  		if(current->next == NULL) {
    \ 000072 22......             jsl     long:`?L183`
    \ 000076 d014                 bne     `?L70`
0168                  			// The end of list
0169                  			node->prev = current;
0170                  			current->next = node;
    \ 000078 22......             jsl     long:`?L179`
    \ 00007c a5..                 lda     dp:.tiny (_Dp+4)
    \ 00007e a00400               ldy     ##4
    \ 000081 97..                 sta     [.tiny (_Dp+8)],y
    \ 000083 a5..                 lda     dp:.tiny (_Dp+6)
    \ 000085 a00600               ldy     ##6
    \ 000088 97..                 sta     [.tiny (_Dp+8)],y
    \ 00008a 8033                 bra     `?L59`
    \ 00008c          `?L70`:
0171                  		} else {
0172                  			// Somewhere in the middle
0173                  			pmalloc_item_t __far *oldnext = current->next;
    \ 00008c b7..                 lda     [.tiny (_Dp+8)],y
    \ 00008e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000090 a00400               ldy     ##4
    \ 000093 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000095 85..                 sta     dp:.tiny _Dp
0174                  
0175                  			current->next = node;
    \ 000097 a5..                 lda     dp:.tiny (_Dp+4)
    \ 000099 97..                 sta     [.tiny (_Dp+8)],y
    \ 00009b a5..                 lda     dp:.tiny (_Dp+6)
    \ 00009d a00600               ldy     ##6
    \ 0000a0 97..                 sta     [.tiny (_Dp+8)],y
0176                  			node->prev = current;
0177                  			node->next = oldnext;
    \ 0000a2 22......             jsl     long:`?L179`
    \ 0000a6 a5..                 lda     dp:.tiny _Dp
    \ 0000a8 a00400               ldy     ##4
    \ 0000ab 97..                 sta     [.tiny (_Dp+4)],y
    \ 0000ad a5..                 lda     dp:.tiny (_Dp+2)
    \ 0000af a00600   `?L159`:    ldy     ##6
    \ 0000b2 97..                 sta     [.tiny (_Dp+4)],y
0178                  			oldnext->prev = node;
    \ 0000b4 a5..                 lda     dp:.tiny (_Dp+4)
    \ 0000b6 87..                 sta     [.tiny _Dp]
    \ 0000b8 a5..                 lda     dp:.tiny (_Dp+6)
    \ 0000ba a00200               ldy     ##2
    \ 0000bd 97..                 sta     [.tiny _Dp],y
    \ 0000bf          `?L59`:
0179                  		}
0180                  	} 
0181                  }
    \ 0000bf 5c......             jmp     long:`?L75`
0182                  
0183                  void pmalloc_item_remove(fp_pmalloc_item_t *root, pmalloc_item_t __far *node) 
0184                  {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_item_remove
    \ 000000          pmalloc_item_remove:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
0185                  	// Remove the node
0186                  	if(node->prev) node->prev->next = node->next;
    \ 000004 a7..                 lda     [.tiny (_Dp+4)]
    \ 000006 a00200               ldy     ##2
    \ 000009 17..                 ora     [.tiny (_Dp+4)],y
    \ 00000b f016                 beq     `?L77`
    \ 00000d b7..                 lda     [.tiny (_Dp+4)],y
    \ 00000f 85..                 sta     dp:.tiny (_Dp+10)
    \ 000011 a7..                 lda     [.tiny (_Dp+4)]
    \ 000013 85..                 sta     dp:.tiny (_Dp+8)
    \ 000015 a00400               ldy     ##4
    \ 000018 b7..                 lda     [.tiny (_Dp+4)],y
    \ 00001a 97..                 sta     [.tiny (_Dp+8)],y
    \ 00001c a00600               ldy     ##6
    \ 00001f b7..                 lda     [.tiny (_Dp+4)],y
    \ 000021 97..                 sta     [.tiny (_Dp+8)],y
    \ 000023          `?L77`:
0187                  	if(node->next) node->next->prev = node->prev;
    \ 000023 a00400               ldy     ##4
    \ 000026 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000028 a00600               ldy     ##6
    \ 00002b 17..                 ora     [.tiny (_Dp+4)],y
    \ 00002d f016                 beq     `?L80`
    \ 00002f b7..                 lda     [.tiny (_Dp+4)],y
    \ 000031 85..                 sta     dp:.tiny (_Dp+10)
    \ 000033 a00400               ldy     ##4
    \ 000036 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000038 85..                 sta     dp:.tiny (_Dp+8)
    \ 00003a a7..                 lda     [.tiny (_Dp+4)]
    \ 00003c 87..                 sta     [.tiny (_Dp+8)]
    \ 00003e a00200               ldy     ##2
    \ 000041 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000043 97..                 sta     [.tiny (_Dp+8)],y
    \ 000045          `?L80`:
0188                  	
0189                  	// Fixup root if the node was root
0190                  	if(node==*root) {
    \ 000045 a7..                 lda     [.tiny _Dp]
    \ 000047 c5..                 cmp     dp:.tiny (_Dp+4)
    \ 000049 d026                 bne     `?L83`
    \ 00004b a00200               ldy     ##2
    \ 00004e b7..                 lda     [.tiny _Dp],y
    \ 000050 c5..                 cmp     dp:.tiny (_Dp+6)
    \ 000052 d01d                 bne     `?L83`
0191                  		if (node->prev) 
    \ 000054 a7..                 lda     [.tiny (_Dp+4)]
    \ 000056 17..                 ora     [.tiny (_Dp+4)],y
    \ 000058 f006                 beq     `?L85`
0192                  			*root = node->prev; 
    \ 00005a a7..                 lda     [.tiny (_Dp+4)]
    \ 00005c 87..                 sta     [.tiny _Dp]
    \ 00005e 800a                 bra     `?L160`
    \ 000060          `?L85`:
0193                  		else 
0194                  			*root = node->next; 
    \ 000060 a00400               ldy     ##4
    \ 000063 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000065 87..                 sta     [.tiny _Dp]
    \ 000067 a00600               ldy     ##6
    \ 00006a          `?L160`:
    \ 00006a b7..                 lda     [.tiny (_Dp+4)],y
    \ 00006c a00200               ldy     ##2
    \ 00006f 97..                 sta     [.tiny _Dp],y
    \ 000071          `?L83`:
0195                  	}
0196                  
0197                  	// Clear the next and previous pointers
0198                  	node->next = NULL;
0199                  	node->prev = NULL;
    \ 000071 22......             jsl     long:`?L176`
    \ 000075 87..                 sta     [.tiny (_Dp+4)]
    \ 000077 a00200               ldy     ##2
    \ 00007a 97..                 sta     [.tiny (_Dp+4)],y
    \ 00007c          `?L75`:
0200                  }
    \ 00007c 7a                   ply
    \ 00007d 84..                 sty     dp:.tiny (_Dp+10)
    \ 00007f 7a                   ply
    \ 000080 84..                 sty     dp:.tiny (_Dp+8)
    \ 000082 6b                   rtl
0201                  
0202                  #ifdef DEBUG
0203                  void pmalloc_dump_stats(pmalloc_t *pm) {
    \ 000000                      .section farcode,text
    \ 000000                      .public pmalloc_dump_stats
    \ 000000          pmalloc_dump_stats:
    \ 000000 d4..                 pei     dp:.tiny (_Dp+8)
    \ 000002 d4..                 pei     dp:.tiny (_Dp+10)
    \ 000004 d4..                 pei     dp:.tiny (_Dp+12)
    \ 000006 d4..                 pei     dp:.tiny (_Dp+14)
    \ 000008 3b                   tsc
    \ 000009 38                   sec
    \ 00000a e92600               sbc     ##38
    \ 00000d 1b                   tcs
    \ 00000e a5..                 lda     dp:.tiny _Dp
    \ 000010 8323                 sta     35,s
    \ 000012 a5..                 lda     dp:.tiny (_Dp+2)
    \ 000014 8325                 sta     37,s
0204                  	printf("---------------------\r");
    \ 000016 a9....               lda     ##.word0 `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`
    \ 000019 85..                 sta     dp:.tiny _Dp
    \ 00001b a9....               lda     ##.word2 `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`
    \ 00001e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000020 22......             jsl     long:`?L170`
0205                  	printf(" - freemem: %lu\r", pm->freemem);
    \ 000024 a00a00               ldy     ##10
    \ 000027 b7..                 lda     [.tiny _Dp],y
    \ 000029 48                   pha
    \ 00002a a00800               ldy     ##8
    \ 00002d b7..                 lda     [.tiny _Dp],y
    \ 00002f 48                   pha
    \ 000030 a9....               lda     ##.word0 `_StringLiteral_[32,45,32,102,114,101,101,109,101,109,58,32,37,108,117,13]`
    \ 000033 85..                 sta     dp:.tiny _Dp
    \ 000035 a9....               lda     ##.word2 `_StringLiteral_[32,45,32,102,114,101,101,109,101,109,58,32,37,108,117,13]`
    \ 000038 22......             jsl     long:`?L174`
    \ 00003c 8305                 sta     5,s
0206                  	printf(" - totalmem: %lu\r", pm->totalmem);
    \ 00003e a329                 lda     41,s
    \ 000040 85..                 sta     dp:.tiny (_Dp+2)
    \ 000042 a327                 lda     39,s
    \ 000044 85..                 sta     dp:.tiny _Dp
    \ 000046 a00e00               ldy     ##14
    \ 000049 b7..                 lda     [.tiny _Dp],y
    \ 00004b 48                   pha
    \ 00004c a00c00               ldy     ##12
    \ 00004f b7..                 lda     [.tiny _Dp],y
    \ 000051 48                   pha
    \ 000052 a9....               lda     ##.word0 `_StringLiteral_[32,45,32,116,111,116,97,108,109,101,109,58,32,37,108,117,13]`
    \ 000055 85..                 sta     dp:.tiny _Dp
    \ 000057 a9....               lda     ##.word2 `_StringLiteral_[32,45,32,116,111,116,97,108,109,101,109,58,32,37,108,117,13]`
    \ 00005a 22......             jsl     long:`?L174`
    \ 00005e 8309                 sta     9,s
0207                  	printf(" - totalnodes: %lu (sizeof %d)\r", pm->totalnodes, (int)sizeof(pmalloc_item_t));
    \ 000060 f40c00               pea     ##12
    \ 000063 a32f                 lda     47,s
    \ 000065 85..                 sta     dp:.tiny (_Dp+2)
    \ 000067 a32d                 lda     45,s
    \ 000069 85..                 sta     dp:.tiny _Dp
    \ 00006b a01200               ldy     ##18
    \ 00006e b7..                 lda     [.tiny _Dp],y
    \ 000070 48                   pha
    \ 000071 a01000               ldy     ##16
    \ 000074 b7..                 lda     [.tiny _Dp],y
    \ 000076 48                   pha
    \ 000077 a9....               lda     ##.word0 `_StringLiteral_[32,45,32,116,111,116,97,108,110,111,100,101,115,58,32,37,108,117,32,40,115,105,122,101,111,102,32,37,100,41,13]`
    \ 00007a 85..                 sta     dp:.tiny _Dp
    \ 00007c a9....               lda     ##.word2 `_StringLiteral_[32,45,32,116,111,116,97,108,110,111,100,101,115,58,32,37,108,117,32,40,115,105,122,101,111,102,32,37,100,41,13]`
    \ 00007f 22......             jsl     long:`?L174`
    \ 000083 830f                 sta     15,s
0208                  	printf(" - assigned:\r");
    \ 000085 3b                   tsc
    \ 000086 18                   clc
    \ 000087 690e00               adc     ##14
    \ 00008a 1b                   tcs
    \ 00008b a9....               lda     ##.word0 `_StringLiteral_[32,45,32,97,115,115,105,103,110,101,100,58,13]`
    \ 00008e 85..                 sta     dp:.tiny _Dp
    \ 000090 a9....               lda     ##.word2 `_StringLiteral_[32,45,32,97,115,115,105,103,110,101,100,58,13]`
    \ 000093 85..                 sta     dp:.tiny (_Dp+2)
    \ 000095 22......             jsl     long:`?L170`
0209                  	for(pmalloc_item_t __far * current = pm->assigned; current != NULL; current=current->next) {
    \ 000099 a00600               ldy     ##6
    \ 00009c b7..                 lda     [.tiny _Dp],y
    \ 00009e 85..                 sta     dp:.tiny (_Dp+10)
    \ 0000a0 a00400               ldy     ##4
    \ 0000a3 b7..                 lda     [.tiny _Dp],y
    \ 0000a5 85..                 sta     dp:.tiny (_Dp+8)
    \ 0000a7          `?L92`:
    \ 0000a7 a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000a9 05..                 ora     dp:.tiny (_Dp+10)
    \ 0000ab f003                 beq     `?L245`
    \ 0000ad 4c....               jmp     .kbank `?L91`
    \ 0000b0          `?L245`:
0210                  		printf("  - (%08llx) %08llx- %08llx-size:%lld (%u sys, %lu usr)\r", (unsigned long long)(char __far *)current, (unsigned long long)(char __far *)current + sizeof(pmalloc_item_t), (unsigned long long)(char __far *)current + current->size + sizeof(pmalloc_item_t), (unsigned long long)(current->size + sizeof(pmalloc_item_t)), sizeof(pmalloc_item_t), current->size);
0211                  	} 
0212                  	printf(" - available:\r");
    \ 0000b0 a9....               lda     ##.word0 `_StringLiteral_[32,45,32,97,118,97,105,108,97,98,108,101,58,13]`
    \ 0000b3 85..                 sta     dp:.tiny _Dp
    \ 0000b5 a9....               lda     ##.word2 `_StringLiteral_[32,45,32,97,118,97,105,108,97,98,108,101,58,13]`
    \ 0000b8 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000ba 22......             jsl     long:`?L170`
0213                  	for(pmalloc_item_t __far * current = pm->available; current != NULL; current=current->next) {
    \ 0000be a00200               ldy     ##2
    \ 0000c1 22......             jsl     long:`?L177`
    \ 0000c5          `?L96`:
    \ 0000c5 a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000c7 05..                 ora     dp:.tiny (_Dp+10)
    \ 0000c9 d01e                 bne     `?L95`
0214                  		printf("  - (%08llx) %08llx->%08llx-size:%lld (%u sys, %lu usr)\r", (unsigned long long)(char __far *)current, (unsigned long long)(char __far *)current + sizeof(pmalloc_item_t), (unsigned long long)(char __far *)current + current->size + sizeof(pmalloc_item_t), (unsigned long long)(current->size + sizeof(pmalloc_item_t)), sizeof(pmalloc_item_t), current->size);
0215                  	} 
0216                  
0217                  	printf("---------------------\r");
    \ 0000cb a9....               lda     ##.word0 `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`
    \ 0000ce 85..                 sta     dp:.tiny _Dp
    \ 0000d0 a9....               lda     ##.word2 `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`
    \ 0000d3 85..                 sta     dp:.tiny (_Dp+2)
    \ 0000d5 22......             jsl     long:printf
0218                  }
    \ 0000d9 3b                   tsc
    \ 0000da 18                   clc
    \ 0000db 692600               adc     ##38
    \ 0000de 1b                   tcs
    \ 0000df 7a                   ply
    \ 0000e0 84..                 sty     dp:.tiny (_Dp+14)
    \ 0000e2 7a                   ply
    \ 0000e3 84..                 sty     dp:.tiny (_Dp+12)
    \ 0000e5 5c......             jmp     long:`?L75`
    \ 0000e9          `?L95`:
    \ 0000e9 a5..                 lda     dp:.tiny (_Dp+10)
    \ 0000eb aa                   tax
    \ 0000ec a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000ee 8303                 sta     3,s
    \ 0000f0 8a                   txa
    \ 0000f1 8305                 sta     5,s
    \ 0000f3 a90000               lda     ##0
    \ 0000f6 8307                 sta     7,s
    \ 0000f8 8309                 sta     9,s
    \ 0000fa a5..                 lda     dp:.tiny (_Dp+10)
    \ 0000fc aa                   tax
    \ 0000fd a5..                 lda     dp:.tiny (_Dp+8)
    \ 0000ff 830b                 sta     11,s
    \ 000101 8a                   txa
    \ 000102 830d                 sta     13,s
    \ 000104 a90000               lda     ##0
    \ 000107 830f                 sta     15,s
    \ 000109 8311                 sta     17,s
    \ 00010b 3b                   tsc
    \ 00010c 22......             jsl     long:`?L178`
    \ 000110 3b                   tsc
    \ 000111 18                   clc
    \ 000112 22......             jsl     long:`?L168`
    \ 000116          `?L141`:
    \ 000116 22......             jsl     long:`?L166`
    \ 00011a 10fa                 bpl     `?L141`
    \ 00011c a5..                 lda     dp:.tiny (_Dp+10)
    \ 00011e aa                   tax
    \ 00011f a5..                 lda     dp:.tiny (_Dp+8)
    \ 000121 8313                 sta     19,s
    \ 000123 8a                   txa
    \ 000124 8315                 sta     21,s
    \ 000126 a90000               lda     ##0
    \ 000129 8317                 sta     23,s
    \ 00012b 8319                 sta     25,s
    \ 00012d 22......             jsl     long:`?L165`
    \ 000131 831b                 sta     27,s
    \ 000133 8a                   txa
    \ 000134 831d                 sta     29,s
    \ 000136 a90000               lda     ##0
    \ 000139 831f                 sta     31,s
    \ 00013b 8321                 sta     33,s
    \ 00013d 3b                   tsc
    \ 00013e 22......             jsl     long:`?L167`
    \ 000142 3b                   tsc
    \ 000143 18                   clc
    \ 000144 691300               adc     ##19
    \ 000147 86..                 stx     dp:.tiny (_Dp+6)
    \ 000149 85..                 sta     dp:.tiny (_Dp+4)
    \ 00014b 3b                   tsc
    \ 00014c 18                   clc
    \ 00014d 22......             jsl     long:`?L175`
    \ 000151          `?L143`:
    \ 000151 22......             jsl     long:`?L166`
    \ 000155 10fa                 bpl     `?L143`
    \ 000157 3b                   tsc
    \ 000158 22......             jsl     long:`?L167`
    \ 00015c 3b                   tsc
    \ 00015d 18                   clc
    \ 00015e 22......             jsl     long:`?L169`
    \ 000162          `?L145`:
    \ 000162 22......             jsl     long:`?L166`
    \ 000166 10fa                 bpl     `?L145`
    \ 000168 22......             jsl     long:`?L165`
    \ 00016c 18                   clc
    \ 00016d 690c00               adc     ##12
    \ 000170 9001                 bcc     `?L147`
    \ 000172 e8                   inx
    \ 000173 831b     `?L147`:    sta     27,s
    \ 000175 8a                   txa
    \ 000176 831d                 sta     29,s
    \ 000178 a90000               lda     ##0
    \ 00017b 831f                 sta     31,s
    \ 00017d 8321                 sta     33,s
    \ 00017f a00a00               ldy     ##10
    \ 000182 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000184 48                   pha
    \ 000185 a00800               ldy     ##8
    \ 000188 b7..                 lda     [.tiny (_Dp+8)],y
    \ 00018a 48                   pha
    \ 00018b f40c00               pea     ##12
    \ 00018e 3b                   tsc
    \ 00018f 18                   clc
    \ 000190 692100               adc     ##33
    \ 000193 a20000               ldx     ##0
    \ 000196 da                   phx
    \ 000197 48                   pha
    \ 000198 3b                   tsc
    \ 000199 18                   clc
    \ 00019a 691d00               adc     ##29
    \ 00019d da                   phx
    \ 00019e 48                   pha
    \ 00019f 3b                   tsc
    \ 0001a0 18                   clc
    \ 0001a1 691900               adc     ##25
    \ 0001a4 da                   phx
    \ 0001a5 48                   pha
    \ 0001a6 3b                   tsc
    \ 0001a7 18                   clc
    \ 0001a8 691500               adc     ##21
    \ 0001ab da                   phx
    \ 0001ac 48                   pha
    \ 0001ad a9....               lda     ##.word0 `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,62,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 0001b0 85..                 sta     dp:.tiny _Dp
    \ 0001b2 a9....               lda     ##.word2 `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,62,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 0001b5 22......             jsl     long:`?L174`
    \ 0001b9 8317                 sta     23,s
    \ 0001bb 3b                   tsc
    \ 0001bc 18                   clc
    \ 0001bd 691600               adc     ##22
    \ 0001c0 1b                   tcs
    \ 0001c1 a00600               ldy     ##6
    \ 0001c4 22......             jsl     long:`?L162`
    \ 0001c8 4c....               jmp     .kbank `?L96`
    \ 0001cb          `?L91`:
    \ 0001cb a5..                 lda     dp:.tiny (_Dp+10)
    \ 0001cd aa                   tax
    \ 0001ce a5..                 lda     dp:.tiny (_Dp+8)
    \ 0001d0 8303                 sta     3,s
    \ 0001d2 8a                   txa
    \ 0001d3 8305                 sta     5,s
    \ 0001d5 a90000               lda     ##0
    \ 0001d8 8307                 sta     7,s
    \ 0001da 8309                 sta     9,s
    \ 0001dc a5..                 lda     dp:.tiny (_Dp+10)
    \ 0001de aa                   tax
    \ 0001df a5..                 lda     dp:.tiny (_Dp+8)
    \ 0001e1 830b                 sta     11,s
    \ 0001e3 8a                   txa
    \ 0001e4 830d                 sta     13,s
    \ 0001e6 a90000               lda     ##0
    \ 0001e9 830f                 sta     15,s
    \ 0001eb 8311                 sta     17,s
    \ 0001ed 3b                   tsc
    \ 0001ee 22......             jsl     long:`?L178`
    \ 0001f2 3b                   tsc
    \ 0001f3 18                   clc
    \ 0001f4 22......             jsl     long:`?L168`
    \ 0001f8          `?L150`:
    \ 0001f8 22......             jsl     long:`?L166`
    \ 0001fc 10fa                 bpl     `?L150`
    \ 0001fe a5..                 lda     dp:.tiny (_Dp+10)
    \ 000200 aa                   tax
    \ 000201 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000203 8313                 sta     19,s
    \ 000205 8a                   txa
    \ 000206 8315                 sta     21,s
    \ 000208 a90000               lda     ##0
    \ 00020b 8317                 sta     23,s
    \ 00020d 8319                 sta     25,s
    \ 00020f 22......             jsl     long:`?L165`
    \ 000213 831b                 sta     27,s
    \ 000215 8a                   txa
    \ 000216 831d                 sta     29,s
    \ 000218 a90000               lda     ##0
    \ 00021b 831f                 sta     31,s
    \ 00021d 8321                 sta     33,s
    \ 00021f 3b                   tsc
    \ 000220 22......             jsl     long:`?L167`
    \ 000224 3b                   tsc
    \ 000225 18                   clc
    \ 000226 691300               adc     ##19
    \ 000229 86..                 stx     dp:.tiny (_Dp+6)
    \ 00022b 85..                 sta     dp:.tiny (_Dp+4)
    \ 00022d 3b                   tsc
    \ 00022e 18                   clc
    \ 00022f 22......             jsl     long:`?L175`
    \ 000233          `?L152`:
    \ 000233 22......             jsl     long:`?L166`
    \ 000237 10fa                 bpl     `?L152`
    \ 000239 3b                   tsc
    \ 00023a 22......             jsl     long:`?L167`
    \ 00023e 3b                   tsc
    \ 00023f 18                   clc
    \ 000240 22......             jsl     long:`?L169`
    \ 000244          `?L154`:
    \ 000244 22......             jsl     long:`?L166`
    \ 000248 10fa                 bpl     `?L154`
    \ 00024a 22......             jsl     long:`?L165`
    \ 00024e 18                   clc
    \ 00024f 690c00               adc     ##12
    \ 000252 9001                 bcc     `?L156`
    \ 000254 e8                   inx
    \ 000255 831b     `?L156`:    sta     27,s
    \ 000257 8a                   txa
    \ 000258 831d                 sta     29,s
    \ 00025a a90000               lda     ##0
    \ 00025d 831f                 sta     31,s
    \ 00025f 8321                 sta     33,s
    \ 000261 a00a00               ldy     ##10
    \ 000264 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000266 48                   pha
    \ 000267 a00800               ldy     ##8
    \ 00026a b7..                 lda     [.tiny (_Dp+8)],y
    \ 00026c 48                   pha
    \ 00026d f40c00               pea     ##12
    \ 000270 3b                   tsc
    \ 000271 18                   clc
    \ 000272 692100               adc     ##33
    \ 000275 a20000               ldx     ##0
    \ 000278 da                   phx
    \ 000279 48                   pha
    \ 00027a 3b                   tsc
    \ 00027b 18                   clc
    \ 00027c 691d00               adc     ##29
    \ 00027f da                   phx
    \ 000280 48                   pha
    \ 000281 3b                   tsc
    \ 000282 18                   clc
    \ 000283 691900               adc     ##25
    \ 000286 da                   phx
    \ 000287 48                   pha
    \ 000288 3b                   tsc
    \ 000289 18                   clc
    \ 00028a 691500               adc     ##21
    \ 00028d da                   phx
    \ 00028e 48                   pha
    \ 00028f a9....               lda     ##.word0 `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,32,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 000292 85..                 sta     dp:.tiny _Dp
    \ 000294 a9....               lda     ##.word2 `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,32,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 000297 22......             jsl     long:`?L174`
    \ 00029b 8317                 sta     23,s
    \ 00029d 3b                   tsc
    \ 00029e 18                   clc
    \ 00029f 691600               adc     ##22
    \ 0002a2 1b                   tcs
    \ 0002a3 a00600               ldy     ##6
    \ 0002a6 22......             jsl     long:`?L162`
    \ 0002aa 4c....               jmp     .kbank `?L92`
0219                  #endif
0220                  
0221                  /*
0222                  void __far *pmalloc_calloc(pmalloc_t *pm, uint32_t num, uint32_t size)
0223                  {
0224                  	char *mem = pmalloc_malloc(pm, num * size);
0225                  	if(mem==NULL) return NULL;
0226                  	for(uint32_t i=0; i<size; i++) mem[i]=0;
0227                  	return mem;
0228                  }
0229                  */
0230                  
0231                  /*
0232                  void __far *pmalloc_realloc(pmalloc_t *pm, void __far *ptr, uint32_t requestedSize)
0233                  {
0234                      // Match stdlib realloc() NULL interface
0235                      if (ptr == NULL) return pmalloc_malloc(pm, requestedSize);
0236                  
0237                      // Get the actual pmalloc_item_t of the block
0238                  	pmalloc_item_t *node = (pmalloc_item_t __far *)(ptr - sizeof(pmalloc_item_t));
0239                      
0240                      // If the requested size is equal to the current size, return the original pointer
0241                      if (node->size == requestedSize) return ptr;
0242                  
0243                      // If the requested size is smaller:
0244                      if (requestedSize < node->size) {
0245                       	// If the difference is less than twice sizeof(pmalloc_item_t), it's not worth doing anything, return the original pointer
0246                       	if(node->size - requestedSize < sizeof(pmalloc_item_t)*2) return ptr;
0247                  
0248                       	// Otherwise, create a free block for the extra space, truncate the block at the new size, and merge around it
0249                       	pmalloc_item_t *newFree = (pmalloc_item_t __far *)((char*)node + sizeof(pmalloc_item_t) + requestedSize);
0250                       	newFree->size = (node->size - requestedSize) - sizeof(pmalloc_item_t);
0251                       	pmalloc_item_insert(&pm->available, newFree);
0252                  
0253                       	// Update free memory and node count
0254                       	pm->freemem += (node->size - requestedSize) - sizeof(pmalloc_item_t);
0255                       	pm->totalnodes++;
0256                  
0257                       	// Resize this block
0258                       	node->size = requestedSize;
0259                  
0260                       	// Merge around the new free block
0261                       	pmalloc_merge(pm, newFree);
0262                  
0263                       	// Return original pointer
0264                       	return ptr;
0265                      }
0266                  
0267                      // // Shortcut if we know there's not enough memory
0268                      if (requestedSize - node->size > pmalloc_freemem(pm)) return NULL;
0269                  
0270                      // Expand the block if the requested size is larger than the current size
0271                      if (requestedSize > node->size) {
0272                      	// Does the next allocated block have enough space before it for this node to expand?
0273                      	if(node->next == NULL || (char*)(node->next) > (char*)node + sizeof(pmalloc_item_t) + requestedSize) {
0274                      		// Get the existing block of free space in between node and the next
0275                      		pmalloc_item_t *freeBlock = (pmalloc_item_t __far *)((char*)node + sizeof(pmalloc_item_t) + node->size);
0276                      		// Get the free block current size
0277                      		uint32_t freeBlockSize = freeBlock->size;
0278                      		// Remove that block from the free chain
0279                      		pmalloc_item_remove(&pm->available, freeBlock);
0280                  
0281                      		// Create a new free block with the difference in size, after this node if it was resized
0282                      		freeBlock = (pmalloc_item_t __far *)((char*)node + sizeof(pmalloc_item_t) + requestedSize);
0283                      		freeBlock->size = freeBlockSize - (requestedSize - node->size);
0284                  
0285                      		// Add it to the free list
0286                      		pmalloc_item_insert(&pm->available, freeBlock);
0287                  
0288                      		// Update the stats
0289                      		pm->freemem -= requestedSize - node->size;
0290                      		// pm->totalnodes stays the same, we removed one and added one
0291                  
0292                      		// Resize this block
0293                      		node->size = requestedSize;
0294                  
0295                      		// Merge around the new free block
0296                       		pmalloc_merge(pm, freeBlock);
0297                  
0298                      		// Return original pointer
0299                      		return ptr;
0300                      	};
0301                      }
0302                  
0303                      // If all else fails, completely reallocate the block, copy its contents, and free the old block.
    \ 000000                      .section farcode,text
    \ 000000          `?L161`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000002 85..                 sta     dp:.tiny (_Dp+4)
    \ 000004 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000006 85..                 sta     dp:.tiny (_Dp+6)
    \ 000008 a5..                 lda     dp:.tiny (_Dp+12)
    \ 00000a 85..                 sta     dp:.tiny _Dp
    \ 00000c a5..                 lda     dp:.tiny (_Dp+14)
    \ 00000e 85..                 sta     dp:.tiny (_Dp+2)
    \ 000010 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L162`:
    \ 000000 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000002 85..                 sta     dp:.tiny (_Dp+2)
    \ 000004 a00400               ldy     ##4
    \ 000007 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000009          `?L163`:
    \ 000009 85..                 sta     dp:.tiny _Dp
    \ 00000b          `?L164`:
    \ 00000b 85..                 sta     dp:.tiny (_Dp+8)
    \ 00000d a5..                 lda     dp:.tiny (_Dp+2)
    \ 00000f 85..                 sta     dp:.tiny (_Dp+10)
    \ 000011 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00a00   `?L165`:    ldy     ##10
    \ 000003 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000005 aa                   tax
    \ 000006 a00800               ldy     ##8
    \ 000009 b7..                 lda     [.tiny (_Dp+8)],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L166`:
    \ 000000 b7..                 lda     [.tiny (_Dp+4)],y
    \ 000002 77..                 adc     [.tiny (_Dp+12)],y
    \ 000004 97..                 sta     [.tiny _Dp],y
    \ 000006 c8                   iny
    \ 000007 c8                   iny
    \ 000008 ca                   dex
    \ 000009 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 18       `?L167`:    clc
    \ 000001 691300               adc     ##19
    \ 000004 a20000               ldx     ##0
    \ 000007 86..                 stx     dp:.tiny (_Dp+2)
    \ 000009 85..                 sta     dp:.tiny _Dp
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 690b00   `?L168`:    adc     ##11
    \ 000003 86..                 stx     dp:.tiny (_Dp+6)
    \ 000005 85..                 sta     dp:.tiny (_Dp+4)
    \ 000007 a9....               lda     ##.word0 _Const_000000000000000c
    \ 00000a 85..                 sta     dp:.tiny (_Dp+12)
    \ 00000c a9....               lda     ##.word2 _Const_000000000000000c
    \ 00000f 85..                 sta     dp:.tiny (_Dp+14)
    \ 000011 a20300               ldx     ##3
    \ 000014 a00000               ldy     ##0
    \ 000017 18                   clc
    \ 000018 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 691300   `?L169`:    adc     ##19
    \ 000003 86..                 stx     dp:.tiny (_Dp+6)
    \ 000005 85..                 sta     dp:.tiny (_Dp+4)
    \ 000007 a9....               lda     ##.word0 _Const_000000000000000c
    \ 00000a 85..                 sta     dp:.tiny (_Dp+12)
    \ 00000c a9....               lda     ##.word2 _Const_000000000000000c
    \ 00000f 85..                 sta     dp:.tiny (_Dp+14)
    \ 000011 a20300               ldx     ##3
    \ 000014 a00000               ldy     ##0
    \ 000017 18                   clc
    \ 000018 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L170`:
    \ 000000 22......             jsl     long:printf
    \ 000004 a328                 lda     40,s
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 a326                 lda     38,s
    \ 00000a 85..                 sta     dp:.tiny _Dp
    \ 00000c 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L172`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000002 85..                 sta     dp:.tiny _Dp
    \ 000004 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000006 85..                 sta     dp:.tiny (_Dp+2)
    \ 000008 18                   clc
    \ 000009 a5..                 lda     dp:.tiny _Dp
    \ 00000b 690c00               adc     ##12
    \ 00000e 85..                 sta     dp:.tiny _Dp
    \ 000010 18                   clc
    \ 000011 a5..                 lda     dp:.tiny _Dp
    \ 000013 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00a00   `?L173`:    ldy     ##10
    \ 000003 b7..                 lda     [.tiny _Dp],y
    \ 000005 aa                   tax
    \ 000006 a00800               ldy     ##8
    \ 000009 b7..                 lda     [.tiny _Dp],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L174`:
    \ 000000 85..                 sta     dp:.tiny (_Dp+2)
    \ 000002 5c......             jmp     long:printf
    \ 000000                      .section farcode,text
    \ 000000 691b00   `?L175`:    adc     ##27
    \ 000003 86..                 stx     dp:.tiny (_Dp+14)
    \ 000005 85..                 sta     dp:.tiny (_Dp+12)
    \ 000007 a20300               ldx     ##3
    \ 00000a a00000               ldy     ##0
    \ 00000d 18                   clc
    \ 00000e 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a90000   `?L176`:    lda     ##0
    \ 000003 a00400               ldy     ##4
    \ 000006 97..                 sta     [.tiny (_Dp+4)],y
    \ 000008 a00600               ldy     ##6
    \ 00000b 97..                 sta     [.tiny (_Dp+4)],y
    \ 00000d 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L177`:
    \ 000000 b7..                 lda     [.tiny _Dp],y
    \ 000002 85..                 sta     dp:.tiny (_Dp+10)
    \ 000004 a7..                 lda     [.tiny _Dp]
    \ 000006 85..                 sta     dp:.tiny (_Dp+8)
    \ 000008 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 18       `?L178`:    clc
    \ 000001 690b00               adc     ##11
    \ 000004 a20000               ldx     ##0
    \ 000007 86..                 stx     dp:.tiny (_Dp+2)
    \ 000009 85..                 sta     dp:.tiny _Dp
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000          `?L179`:
    \ 000000 a5..                 lda     dp:.tiny (_Dp+8)
    \ 000002 87..                 sta     [.tiny (_Dp+4)]
    \ 000004 a5..                 lda     dp:.tiny (_Dp+10)
    \ 000006 a00200               ldy     ##2
    \ 000009 97..                 sta     [.tiny (_Dp+4)],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00800   `?L180`:    ldy     ##8
    \ 000003 97..                 sta     [.tiny (_Dp+12)],y
    \ 000005 8a                   txa
    \ 000006 a00a00               ldy     ##10
    \ 000009 97..                 sta     [.tiny (_Dp+12)],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00800   `?L181`:    ldy     ##8
    \ 000003 97..                 sta     [.tiny (_Dp+8)],y
    \ 000005 8a                   txa
    \ 000006 a00a00               ldy     ##10
    \ 000009 97..                 sta     [.tiny (_Dp+8)],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a01200   `?L182`:    ldy     ##18
    \ 000003 b7..                 lda     [.tiny _Dp],y
    \ 000005 aa                   tax
    \ 000006 a01000               ldy     ##16
    \ 000009 b7..                 lda     [.tiny _Dp],y
    \ 00000b 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00400   `?L183`:    ldy     ##4
    \ 000003 b7..                 lda     [.tiny (_Dp+8)],y
    \ 000005 a00600               ldy     ##6
    \ 000008 17..                 ora     [.tiny (_Dp+8)],y
    \ 00000a 6b                   rtl
    \ 000000                      .section farcode,text
    \ 000000 a00400   `?L184`:    ldy     ##4
    \ 000003 97..                 sta     [.tiny (_Dp+8)],y
    \ 000005 a00600               ldy     ##6
    \ 000008 97..                 sta     [.tiny (_Dp+8)],y
    \ 00000a 6b                   rtl
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak _Const_000000000000000c
    \ 000000          _Const_000000000000000c:
    \ 000000 0c000000             .quad   12
    \ 000004 00000000
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,32,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 000000          `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,32,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`:
    \ 000000 20202d20             .byte   32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,32,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13,0
    \ 000004 28253038
    \ 000008 6c6c7829
    \ 00000c 20253038
    \ 000010 6c6c782d
    \ 000014 20253038
    \ 000018 6c6c782d
    \ 00001c 73697a65
    \ 000020 3a256c6c
    \ 000024 64202825
    \ 000028 75207379
    \ 00002c 732c2025
    \ 000030 6c752075
    \ 000034 7372290d
    \ 000038 00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,62,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`
    \ 000000          `_StringLiteral_[32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,62,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13]`:
    \ 000000 20202d20             .byte   32,32,45,32,40,37,48,56,108,108,120,41,32,37,48,56,108,108,120,45,62,37,48,56,108,108,120,45,115,105,122,101,58,37,108,108,100,32,40,37,117,32,115,121,115,44,32,37,108,117,32,117,115,114,41,13,0
    \ 000004 28253038
    \ 000008 6c6c7829
    \ 00000c 20253038
    \ 000010 6c6c782d
    \ 000014 3e253038
    \ 000018 6c6c782d
    \ 00001c 73697a65
    \ 000020 3a256c6c
    \ 000024 64202825
    \ 000028 75207379
    \ 00002c 732c2025
    \ 000030 6c752075
    \ 000034 7372290d
    \ 000038 00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,45,32,97,115,115,105,103,110,101,100,58,13]`
    \ 000000          `_StringLiteral_[32,45,32,97,115,115,105,103,110,101,100,58,13]`:
    \ 000000 202d2061             .byte   32,45,32,97,115,115,105,103,110,101,100,58,13,0
    \ 000004 73736967
    \ 000008 6e65643a
    \ 00000c 0d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,45,32,97,118,97,105,108,97,98,108,101,58,13]`
    \ 000000          `_StringLiteral_[32,45,32,97,118,97,105,108,97,98,108,101,58,13]`:
    \ 000000 202d2061             .byte   32,45,32,97,118,97,105,108,97,98,108,101,58,13,0
    \ 000004 7661696c
    \ 000008 61626c65
    \ 00000c 3a0d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,45,32,102,114,101,101,109,101,109,58,32,37,108,117,13]`
    \ 000000          `_StringLiteral_[32,45,32,102,114,101,101,109,101,109,58,32,37,108,117,13]`:
    \ 000000 202d2066             .byte   32,45,32,102,114,101,101,109,101,109,58,32,37,108,117,13,0
    \ 000004 7265656d
    \ 000008 656d3a20
    \ 00000c 256c750d
    \ 000010 00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,45,32,116,111,116,97,108,109,101,109,58,32,37,108,117,13]`
    \ 000000          `_StringLiteral_[32,45,32,116,111,116,97,108,109,101,109,58,32,37,108,117,13]`:
    \ 000000 202d2074             .byte   32,45,32,116,111,116,97,108,109,101,109,58,32,37,108,117,13,0
    \ 000004 6f74616c
    \ 000008 6d656d3a
    \ 00000c 20256c75
    \ 000010 0d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[32,45,32,116,111,116,97,108,110,111,100,101,115,58,32,37,108,117,32,40,115,105,122,101,111,102,32,37,100,41,13]`
    \ 000000          `_StringLiteral_[32,45,32,116,111,116,97,108,110,111,100,101,115,58,32,37,108,117,32,40,115,105,122,101,111,102,32,37,100,41,13]`:
    \ 000000 202d2074             .byte   32,45,32,116,111,116,97,108,110,111,100,101,115,58,32,37,108,117,32,40,115,105,122,101,111,102,32,37,100,41,13,0
    \ 000004 6f74616c
    \ 000008 6e6f6465
    \ 00000c 733a2025
    \ 000010 6c752028
    \ 000014 73697a65
    \ 000018 6f662025
    \ 00001c 64290d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`
    \ 000000          `_StringLiteral_[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13]`:
    \ 000000 2d2d2d2d             .byte   45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,13,0
    \ 000004 2d2d2d2d
    \ 000008 2d2d2d2d
    \ 00000c 2d2d2d2d
    \ 000010 2d2d2d2d
    \ 000014 2d0d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[110,111,100,101,32,61,32,37,112,13]`
    \ 000000          `_StringLiteral_[110,111,100,101,32,61,32,37,112,13]`:
    \ 000000 6e6f6465             .byte   110,111,100,101,32,61,32,37,112,13,0
    \ 000004 203d2025
    \ 000008 700d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[112,109,97,108,108,111,99,58,32,68,69,66,85,71,32,69,110,97,98,108,101,100,13]`
    \ 000000          `_StringLiteral_[112,109,97,108,108,111,99,58,32,68,69,66,85,71,32,69,110,97,98,108,101,100,13]`:
    \ 000000 706d616c             .byte   112,109,97,108,108,111,99,58,32,68,69,66,85,71,32,69,110,97,98,108,101,100,13,0
    \ 000004 6c6f633a
    \ 000008 20444542
    \ 00000c 55472045
    \ 000010 6e61626c
    \ 000014 65640d00
    \ 000000                      .section cfar,rodata
    \ 000000                      .pubweak `_StringLiteral_[112,116,114,32,32,61,32,37,112,13]`
    \ 000000          `_StringLiteral_[112,116,114,32,32,61,32,37,112,13]`:
    \ 000000 70747220             .byte   112,116,114,32,32,61,32,37,112,13,0
    \ 000004 203d2025
    \ 000008 700d00
0304                  
0305                      // Allocate a new block with the requested size
0306                      void *newPtr = pmalloc_malloc(pm, requestedSize);
0307                  
0308                      // Copy the data from the original block to the new block
0309                      if (newPtr != NULL)
0310                      {
0311                          // Copy the data using memcpy
0312                          for(uint32_t i = 0; i<node->size; i++) *((char*)newPtr + i) = *((char*)ptr + i);
0313                  
0314                          // Free the original block
0315                          pmalloc_free(pm, ptr);
0316                      }
0317                  
0318                      return newPtr;
0319                  }
0320                  */

##########################
#                        #
# Memory sizes (decimal) #
#                        #
##########################

Executable        (Text): 2409 bytes
Constant   __far        :  287 bytes
